---
openapi: 3.0.0
info:
  title: API Endpoints
  description: |
  version: 1.0.0

servers:
  - url: "https://ds.seedao.tech/v1"
    description: "dev env for the API"
paths:
  "/chat/completions":
    post:
      summary: Completions
      tags:
        - ðŸ”Œ API
      description: Creates a model response for the given chat conversation.
      parameters:
        - in: header
          name: Authorization
          description: |
            This field can adopt either of the following two formats:
            
            Bearer Token format: Authorization: Bearer ***<your_token_here>***
            
            API Key format: X-API-Key: ***<your_token_here>***
            
            ***Note: You must choose one of the two formats exclusively.***
          required: true
          schema:
            type: string
            example: "Bearer your_token_here"
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/chatRequest"
      responses:
        '200':
          description: Returns a chat completion object, or a streamed sequence of chat completion chunk objects if the request is streamed. <a href="https://api-docs.deepseek.com/api/create-chat-completion">View More </a>

components:
  schemas:
    chatRequest:
      type: object
      properties:
        messages:
          type: array
          required: true
          description: A list of messages comprising the conversation so far.
          example: [{"content": "You are a helpful assistant","role": "system"},{"content": "Hi","role": "user"}]
        model:
          type: string
          required: true
          description: |
            ID of the model to use. 
            Possible values: [***deepseek-chat***, ***deepseek-reasoner***]
          example: deepseek-reasoner
        frequency_penalty:
          type: number
          required: false
          description: |
            Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
            
            Possible values: ```>= -2``` and ```<= 2```
            
            Default value: ***0***
        max_tokens:
          type: integer
          required: false
          description: |
            Integer between 1 and 8192. The maximum number of tokens that can be generated in the chat completion.The total length of input tokens and generated tokens is limited by the model's context length.If max_tokens is not specified, the default value 4096 is used.
            
            Possible values: ```> 1```
             Default value: ***4096***
          example: 8192
        presence_penalty:
          type: number
          required: false
          description: |
              Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.
              Possible values: ```>= -2``` and ```<= 2```
            
              Default value: ***0***
        response_format:
          type: object
          description: |
            An object specifying the format that the model must output. Setting to { "type": "json_object" } enables JSON Output, which guarantees the message the model generates is valid JSON.

            ***Important: *** When using JSON Output, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
          properties:
            type:
              type: string
              description: |
                Possible values: [***text***, ***json_object***] 
                
                Default value: ***text***
          example: {"type": "text"}
        stream:
          type: boolean
          description: | 
              If set, partial message deltas will be sent. Tokens will be sent as data-only server-sent events (SSE) as they become available, with the stream terminated by a data: [DONE] message.
          example: false
        temperature:
          type: number
          description: |
            What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.We generally recommend altering this or top_p but not both.
            
            Possible values: ```<= 2```
            
             Default value: ***1***
          example: 1
        top_p:
          type: number
          description: |
            An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            
            Possible values: ```<= 1```
            
             Default value: ***1***
          example: 1
        tools:
          type: array
          description: |
            A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported. 
            <a href="https://api-docs.deepseek.com/api/create-chat-completion">View More </a>
          example: null
        logprobs:
          type: boolean
          description: |
            Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the content of message.
          example: false
        top_logprobs:
          type: integer
          description: |
             An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to true if this parameter is used.
              
              Possible values: ```<= 20```
      required:
        - messages
        - model

    chatResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
      required:
        - id
        - username
        - email
