"use strict";(self.webpackChunkseedao_docs=self.webpackChunkseedao_docs||[]).push([[6340],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(67294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(r),u=s,f=c["".concat(i,".").concat(u)]||c[u]||m[u]||o;return r?n.createElement(f,a(a({ref:t},d),{},{components:r})):n.createElement(f,a({ref:t},d))}));function f(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,a=new Array(o);a[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:s,a[1]=l;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},80987:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var n=r(87462),s=(r(67294),r(3905));const o={sidebar_position:1,sidebar_label:"Methods"},a="Methods",l={type:"mdx",unversionedId:"03-sns/sns-js/methods",id:"03-sns/sns-js/methods",title:"Methods",description:"1.1 Resolve addr from sns",source:"@site/seedao-docs/03-sns/sns-js/methods.md",sourceDirName:"03-sns/sns-js",slug:"/sns/sns-js/methods",permalink:"/sns/sns-js/methods",draft:!1,editUrl:null,tags:[],version:"",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Methods"}},i=[{value:"1.1 Resolve addr from sns",id:"11-resolve-addr-from-sns",level:4},{value:"1.2 Resolve sns from addr",id:"12-resolve-sns-from-addr",level:4},{value:"2.1 Batch resolve addr from sns",id:"21-batch-resolve-addr-from-sns",level:4},{value:"2.2 Batch resolve sns from addr",id:"22-batch-resolve-sns-from-addr",level:4}],p={toc:i},d="wrapper";function c(e){let{components:t,...r}=e;return(0,s.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"methods"},"Methods"),(0,s.kt)("h4",{id:"11-resolve-addr-from-sns"},"1.1 Resolve addr from sns"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'const addr: string = await sns.resolve("abc.seedao")\n')),(0,s.kt)("p",null,"If the sns is not registered, it will return ",(0,s.kt)("inlineCode",{parentName:"p"},"0x0000000000000000000000000000000000000000")," (zero address)."),(0,s.kt)("p",null,"This method also supports an optional parameter to specify the rpc endpoint: ",(0,s.kt)("inlineCode",{parentName:"p"},"async function resolve(sns: string, rpc?: string): Promise<string>"),", for example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'const addr: string = await sns.resolve("abc.seedao", "https://eth-mainnet.g.alchemy.com/v2/H43zK7UnIN2v7u2ZoTbizIPnXkylKIZl")\n')),(0,s.kt)("h4",{id:"12-resolve-sns-from-addr"},"1.2 Resolve sns from addr"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'const sns: string = await sns.name("0x123...789")\n')),(0,s.kt)("p",null,"If the address has no sns, it will return ",(0,s.kt)("inlineCode",{parentName:"p"},'""')," (empty string)."),(0,s.kt)("p",null,"This method also supports an optional parameter to specify the rpc endpoint."),(0,s.kt)("h4",{id:"21-batch-resolve-addr-from-sns"},"2.1 Batch resolve addr from sns"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'const addrArr: string[] = await sns.resolves(["abc.seedao", "def.seedao"]);\n')),(0,s.kt)("p",null,"If the sns is not registered, it will return ",(0,s.kt)("inlineCode",{parentName:"p"},"0x0000000000000000000000000000000000000000")," (zero address)."),(0,s.kt)("p",null,"This method also supports an optional parameter to specify the rpc endpoint."),(0,s.kt)("h4",{id:"22-batch-resolve-sns-from-addr"},"2.2 Batch resolve sns from addr"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'const snsArr: string[] = await sns.names(["0x123...789", "0x456...654"]);\n')),(0,s.kt)("p",null,"If the address has no sns, it will return ",(0,s.kt)("inlineCode",{parentName:"p"},'""')," (empty string)."),(0,s.kt)("p",null,"This method also supports an optional parameter to specify the rpc endpoint."))}c.isMDXComponent=!0}}]);